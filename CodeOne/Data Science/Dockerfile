# we expect a volume mounted in /data which contains:
# jupyterhub/
# 	jupyterhub_config.py <- our config file
#	jupyterhub.sqlite <- generated by JupyterHub
# home/
#	user... <- home of user

FROM ubuntu:19.04

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH
ENV MINICONDA_VERSION 4.7.10

# Install all OS dependencies for fully functional notebook server
RUN \
	apt-get update -y \
	&& apt-get install -y --no-install-recommends \
		git \
		nano \
		texlive texlive-generic-extra texlive-xetex \
		unzip \
		curl wget git sudo \
		bzip2 ca-certificates \
		vim tree htop \
		# needed by opencv
		libgl1-mesa-glx \
		# pydot
		graphviz \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

RUN \
	wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh \
	&& /bin/bash ~/miniconda.sh -b -p /opt/conda \
	&& rm ~/miniconda.sh \
	&& /opt/conda/bin/conda clean -ay \
	&& ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \
	&& echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc \
	&& echo "conda activate base" >> ~/.bashrc

# Install conda & friends
RUN conda update -y conda

RUN \
	conda install \
		python=3.7.4 \
		jupyter notebook jupyterhub jupyterlab \
		numpy \
		matplotlib pillow \
		pandas \
		seaborn \
		scipy \
		scikit-learn \
		sympy \
		pydot \
	&& conda clean -ay

RUN \
	pip install tensorflow==2.0.0-rc0 && \
	rm -rf ~/.cache/pip

RUN \
	pip install opencv-contrib-python==4.1.0.25 && \
	rm -rf ~/.cache/pip

RUN ln -s /data/notebooks /etc/skel/notebooks

# Setup application
EXPOSE 8000

CMD ["jupyterhub", "--config=/data/jupyterhub/jupyterhub_config.py"]

